{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","linea1","setLinea1","linea2","setLinea2","image","setImage","className","onChange","e","target","value","selected","disabled","hidden","type","name","placeholder","onClick","html2canvas","document","querySelector","then","canvas","img","toDataURL","link","createElement","download","href","click","id","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0PAoEeA,MAhEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGaJ,mBAAS,IAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAyBb,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQC,SAhBS,SAAUC,GAC7BH,EAASG,EAAEC,OAAOC,QAehB,UACE,wBAAQA,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAzC,2BAGA,wBAAQH,MAAM,OAAd,4BACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,6BACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,QAAd,0BAEF,uBACA,uBACEH,SAnCgB,SAAUC,GAC9BP,EAAUO,EAAEC,OAAOC,QAmCfI,KAAK,OACLC,KAAK,GACLC,YAAY,YACX,IACH,uBACA,uBACET,SAvCgB,SAAUC,GAC9BL,EAAUK,EAAEC,OAAOC,QAuCfI,KAAK,OACLC,KAAK,GACLC,YAAY,YACX,IACH,uBACA,uBACA,wBAAQC,QAxCQ,SAAUT,GAC5BU,IAAYC,SAASC,cAAc,UAAUC,MAAK,SAACC,GACjD,IAAIC,EAAMD,EAAOE,UAAU,aAEvBC,EAAON,SAASO,cAAc,KAClCD,EAAKE,SAAW,WAChBF,EAAKG,KAAOL,EACZE,EAAKI,YAiCL,sBACA,sBAAKvB,UAAU,OAAOwB,GAAG,OAAzB,UACE,+BAAO9B,IACP,+BAAOE,IACNE,GAAS,qBAAK2B,IAAG,gBAAW3B,EAAX,QAAwB4B,IAAI,uBClDvCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BX,M","file":"static/js/main.5612ce55.chunk.js","sourcesContent":["import \"./App.scss\";\nimport { useState } from \"react\";\nimport html2canvas from \"html2canvas\";\n\nfunction App() {\n  const [linea1, setLinea1] = useState(\"\");\n  const [linea2, setLinea2] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const handleChange1 = function (e) {\n    setLinea1(e.target.value);\n  };\n  const handleChange2 = function (e) {\n    setLinea2(e.target.value);\n  };\n  const handleSelect = function (e) {\n    setImage(e.target.value);\n  };\n  const handleClick = function (e) {\n    html2canvas(document.querySelector(\"#meme\")).then((canvas) => {\n      var img = canvas.toDataURL(\"image/jpg\");\n\n      var link = document.createElement(\"a\");\n      link.download = \"meme.jpg\";\n      link.href = img;\n      link.click();\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <select onChange={handleSelect}>\n        <option value=\"\" selected disabled hidden>\n          Elige un meme\n        </option>\n        <option value=\"fire\">Casa en Llamas</option>\n        <option value=\"futurama\">Futurama</option>\n        <option value=\"history\">History Channel</option>\n        <option value=\"matrix\">Matrix</option>\n        <option value=\"philosoraptor\">Philosoraptor</option>\n        <option value=\"smart\">Smart Guy</option>\n      </select>\n      <br />\n      <input\n        onChange={handleChange1}\n        type=\"text\"\n        name=\"\"\n        placeholder=\"linea 1\"\n      />{\" \"}\n      <br />\n      <input\n        onChange={handleChange2}\n        type=\"text\"\n        name=\"\"\n        placeholder=\"linea 2\"\n      />{\" \"}\n      <br />\n      <br />\n      <button onClick={handleClick}>Exportar</button>\n      <div className=\"meme\" id=\"meme\">\n        <span>{linea1}</span>\n        <span>{linea2}</span>\n        {image && <img src={`./img/${image}.jpg`} alt=\"custom meme\" />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./reset.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}